@model EventsViewModel

@{
    ViewData["Title"] = "My Events";
}

@section Styles {
    <link rel="stylesheet" href="~/css/my-events.css" asp-append-version="true" />
}

<h3 class="text-center display-4 py-3 fw-bold">My Events</h3>

<div class="row justify-content-center">
    @await Html.PartialAsync("_TempDataErrorMessage")
    <div class="col-lg-10">
        <form method="get" asp-controller="Events" asp-action="MyEvents" class="filter-form mb-4">
            <div class="row">
                <div class="col-md-6 mb-2 mb-md-0">
                    <input type="text" name="searchTerm" value="@Model.SearchTerm" placeholder="Search events..." class="form-control" />
                </div>
                <div class="col-md-3 mb-2 mb-md-0">
                    <select name="selectedCategory" class="form-control category-select" asp-for="SelectedCategory" asp-items="@(new SelectList(Model.Categories, "CategoryID", "Name", Model.SelectedCategory))" onchange="this.form.submit()">
                        <option value="">All Categories</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <select name="sortOption" class="form-control" asp-for="SortOption" asp-items="@(new SelectList(new List<SelectListItem>
                        {
                            new SelectListItem { Value = "MostPopular", Text = "Most Popular" },
                            new SelectListItem { Value = "Recent", Text = "Recent" },
                            new SelectListItem { Value = "Oldest", Text = "Oldest" },
                            new SelectListItem { Value = "Alphabetical", Text = "Alphabetical" }
                        }, "Value", "Text", Model.SortOption))" onchange="this.form.submit()">
                        <option value="">Sort By...</option>
                    </select>
                </div>
            </div>
        </form>
    </div>
</div>

@if (Model.Events == null || !Model.Events.Any())
{
    <p class="text-center display-4 my-5">No events available.</p>
}
else
{
    <div class="row">
        <div class="col-lg-10 offset-lg-1">
            @foreach (EventViewModel eventView in Model.Events)
            {
                <div class="card mb-4">
                    <div class="row no-gutters">
                        <div class="col-md-5 d-flex align-items-center justify-content-center event-image">
                            <img src="@Url.Content(eventView.ImageUrl)" class="card-img" alt="@eventView.Name" />
                        </div>
                        <div class="col-md-7">
                            <div class="card-body">
                                <h3 class="card-title">@eventView.Name</h3>
                                <p class="card-text">@eventView.Description</p>
                                <p class="card-text"><strong>Duration:</strong> @eventView.StartDate.ToString("g") - @eventView.EndDate.ToString("g")</p>
                                <p class="card-text"><strong>Category:</strong> @eventView.Category.Name</p>
                                <p class="card-text"><strong>Capacity:</strong> @eventView.NumberOfParticipants / @eventView.Capacity</p>
                                <p class="card-text"><strong>Organizer:</strong> @eventView.Organizer.FirstName @eventView.Organizer.LastName</p>
                                <p class="card-text"><strong>Address:</strong> @eventView.Address</p>

                                @if (User.Identity.IsAuthenticated)
                                {
                                    <div class="d-flex">
                                        @if (eventView.HasJoined)
                                        {
                                            <form method="post" asp-controller="Events" asp-action="LeaveEvent" class="me-2">
                                                <input type="hidden" name="eventId" value="@eventView.EventId" />
                                                <button type="submit" class="btn btn-danger">Leave Event</button>
                                            </form>
                                        }
                                        else if (eventView.NumberOfParticipants >= eventView.Capacity)
                                        {
                                            <button class="btn btn-secondary me-2" disabled>Full</button>
                                        }
                                        else
                                        {
                                            <form method="post" asp-controller="Events" asp-action="JoinEvent" class="me-2">
                                                <input type="hidden" name="eventId" value="@eventView.EventId" />
                                                <button type="submit" class="btn btn-primary">Join Event</button>
                                            </form>
                                        }

                                        @if (User.Identity.Name == eventView.Organizer.UserName)
                                        {
                                            <a asp-controller="Events" asp-action="Edit" asp-route-eventId="@eventView.EventId" class="btn btn-warning me-2">Edit Event</a>
                                        }

                                        <a asp-controller="Events" asp-action="EventDetails" asp-route-id="@eventView.EventId" class="btn btn-secondary">Details</a>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

    <div class="pagination justify-content-center mt-4">
        @if (Model.CurrentPage > 1)
        {
            <a class="btn btn-outline-primary me-2" asp-action="MyEvents"
               asp-route-page="@(Model.CurrentPage - 1)"
               asp-route-searchTerm="@Model.SearchTerm"
               asp-route-selectedCategory="@Model.SelectedCategory"
               asp-route-sortOption="@Model.SortOption">Previous</a>
        }

        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <a class="btn @(i == Model.CurrentPage ? "btn-primary" : "btn-outline-primary") me-2"
               asp-action="MyEvents"
               asp-route-page="@i"
               asp-route-searchTerm="@Model.SearchTerm"
               asp-route-selectedCategory="@Model.SelectedCategory"
               asp-route-sortOption="@Model.SortOption">@i</a>
        }

        @if (Model.CurrentPage < Model.TotalPages)
        {
            <a class="btn btn-outline-primary ms-2" asp-action="MyEvents"
               asp-route-page="@(Model.CurrentPage + 1)"
               asp-route-searchTerm="@Model.SearchTerm"
               asp-route-selectedCategory="@Model.SelectedCategory"
               asp-route-sortOption="@Model.SortOption">Next</a>
        }
    </div>
}
